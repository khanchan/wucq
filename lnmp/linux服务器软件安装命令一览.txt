1, 启动 iptables  写入基本的防火墙规则 确保生效
    vi /etc/sysconfig/iptables



# Firewall configuration written by system-config-firewall
# Manual customization of this file is not recommended.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 14334 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT



2，修改SSH端口

    vi /etc/ssh/sshd_config
   
3，安装APF 防火墙  并安装BFD防破解

   wget http://www.rfxn.com/downloads/apf-current.tar.gz

   cd apf-9.7-2
   ./install.sh
   vim /etc/apf/conf.apf
   更改网卡 IFACE_IN 和 IFACE_OUT

   
   DEVEL_MODE="0"   关闭调试

http://www.securecentos.com/install-apf-firewall-on-your-centos-linux-server/

  APF自9.6 (rev:2)版本之后增加了RAB模块.该模块取代了旧版本的antidos模块.


   wget http://www.rfxn.com/downloads/bfd-current.tar.gz
   



4，修改yum源配置，只安装64位的组件。
vi /etc/yum.conf

增加一行

exclude=*.i?86

删除已经安装的非64位源。

yum remove \*.i\?86


更新所有能更新的软件

yum --exclude=httpd* --exclude=php* update


yum remove httpd php

5，做准备 yum install gcc gcc-c++ make flex bison autoconf automake bzip2-devel zlib-devel ncurses-devel libjpeg-devel libpng-devel libtiff-devel freetype-devel pam-devel openssl-devel libxml2-devel gettext-devel pcre-devel

yum install ntp libc-client-devel vim-enhanced bison curl curl-devel gettext-devel flex autoconf automake gcc gcc-c++ apr-devel apr-util-devel bzip2-devel gmp-devel pspell-devel libxml2-devel pam-devel libtiff-devel  libjpeg-devel freetype-devel  libmcrypt-devel freetype libevent* libtool

yum install gd-devel libjpeg-devel libpng-devel freetype-devel libxml2-devel curl-devel 


yum install perl-Net-SSLeay perl-Crypt-SSLeay perl-DBI perl-DBD-MySQL



6,关闭selinux   整个安装完后再打开调试一下
/usr/sbin/setenforce 0
vi /etc/sysconfig/selinux 



最小化安装时     安装最基本的开发工具   yum groupinstall "Development Tools" "Legacy Software Development"

------------------------------------------------

安装 mysql    http://www.1987.name/515.html

wget http://downloads.mysql.com/archives/mysql-5.1/mysql-5.1.61.tar.gz    http://downloads.mysql.com/archives/mysql-5.1/mysql-5.1.66.tar.gz

tar zxvf mysql-5.1.61.tar.gz
cd mysql-5.1.61

groupadd mysql
useradd -g mysql mysql


./configure --prefix=/server/mysql --localstatedir=/server/mysql/data  --with-charset=utf8 --with-collation=utf8_general_ci --with-extra-charsets=all --enable-assembler --with-unix-socket-path=/server/mysql/tmp/mysql.sock --with-pthread --enable-thread-safe-client --enable-local-infile --without-debug --with-plugins=heap,innobase,innodb_plugin --without-embedded-server --with-mysqld-ldflags=-all-static --with-client-ldflags=-all-static


make;make install

cp -rf support-files/my-innodb-heavy-4G.cnf /etc/my.cnf

vi /etc/my.cnf

在[mysqld]区域增加

basedir = /server/mysql
datadir = /server/mysql/data


/server/mysql/bin/mysql_install_db --user=mysql



cp -rf support-files/mysql.server /etc/init.d/mysqld
chmod 755 /etc/init.d/mysqld
chkconfig --add mysqld
chkconfig  mysqld on


cd /server/mysql


chown -R root .
mkdir var
chown -R mysql var
chown -R mysql data
chgrp -R mysql .



service mysqld start


/server/mysql/bin/mysqladmin -u root password 'Zgp1122334qwqeeqqq'


/server/mysql/bin/mysql -u root -p




SHOW variables like "have_%";


错误日志：/server/mysql/data/localhost.localdomain.err

show databases;


剩下的就是优化mysql    提高性能

---------------------------------------------------------------------

安装 apache 

cd /opt


  wget   http://mirror.bjtu.edu.cn/apache//httpd/httpd-2.2.24.tar.gz

tar zxvf httpd-2.2.24.tar.gz
cd httpd-2.2.24
./configure --prefix=/server/apache --enable-dav --enable-dav-fs --enable-so --with-mpm=worker --enable-deflate  --enable-ssl --enable-rewrite --enable-expires --enable-unique-id --enable-headers --enable-cache --enable-mem-cache 


make;make install

vi /server/apache/conf/httpd.conf  

ServerName  去掉 #

<Directory />　　AllowOverride All　　</Directory>




vi /server/apache/conf/extra/httpd-default.conf

ServerTokens OS　    修改为：ServerTokens Prod （在出现错误页的时候不显示服务器操作系统的名称）
ServerSignature On　 修改为：ServerSignature Off （在错误页中不显示Apache的版本）

MaxKeepAliveRequests 100    修改为：MaxKeepAliveRequests 5000 （增加同时连接数）


cp /server/apache/bin/apachectl /etc/init.d/httpd


chmod 755 /etc/rc.d/init.d/httpd

vi /etc/rc.d/init.d/httpd


# chkconfig: 2345 30 70
# description: Activates/Deactivates Apache Web Server


chkconfig --add httpd
chkconfig  httpd on

service httpd start 


---------------------------------

安装PHP前准备工作

cd ..
http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz

tar zxvf mod_fastcgi-2.4.6.tar.gz

cd mod_fastcgi-2.4.6

cp Makefile.AP2 Makefile

vi Makefile     top_dir   = /server/apache

make
make install

vi /server/apache/conf/httpd.conf

LoadModule fastcgi_module /server/apache/modules/mod_fastcgi.so



cd..
wget http://php-fpm.org/downloads/php-5.2.17-fpm-0.5.14.diff.gz
wget http://cn2.php.net/get/php-5.2.17.tar.gz/from/this/mirror

tar zxvf php-5.2.17.tar.gz

yum install patch

gzip -cd php-5.2.17-fpm-0.5.14.diff.gz | patch -d php-5.2.17 -p1






http://mirrors.ustc.edu.cn/gnu/libtool/libtool-2.4.2.tar.gz     ---略

tar zxvf libtool-2.4.2.tar.gz
cd libtool-2.4.2
./configure 
make;make install

cd ..
http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz

tar zxvf libiconv-1.14.tar.gz
cd libiconv-1.14/
./configure
make;make install

ln -s /usr/local/lib/libiconv.so.2 /usr/lib64/libiconv.so.2


cd ..
http://downloads.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fmcrypt%2Ffiles%2FLibmcrypt%2F2.5.8%2F&ts=1343093051&use_mirror=nchc

tar zxvf libmcrypt-2.5.8.tar.gz
cd libmcrypt-2.5.8/
./configure
make;make install

/sbin/ldconfig

cd libltdl/

./configure --enable-ltdl-install

make;make install


ln -sf /usr/local/lib/libmcrypt.la /usr/lib64/libmcrypt.la
ln -sf /usr/local/lib/libmcrypt.so /usr/lib64/libmcrypt.so
ln -sf /usr/local/lib/libmcrypt.so.4 /usr/lib64/libmcrypt.so.4
ln -sf /usr/local/lib/libmcrypt.so.4.4.8 /usr/lib64/libmcrypt.so.4.4.8
ln -sf /usr/local/bin/libmcrypt-config /usr/bin/libmcrypt-config
ln -sf /usr/local/lib/libiconv.so.2 /usr/lib64/libiconv.so.2
ldconfig


cd ..
http://downloads.sourceforge.net/project/mhash/mhash/0.9.9.9/mhash-0.9.9.9.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fmhash%2Ffiles%2Fmhash%2F0.9.9.9%2F&ts=1322478619&use_mirror=ncu

tar zxvf mhash-0.9.9.9.tar.gz
cd mhash-0.9.9.9
./configure
make;make install


ln -sf /usr/local/lib/libmhash.a /usr/lib64/libmhash.a
ln -sf /usr/local/lib/libmhash.la /usr/lib64/libmhash.la
ln -sf /usr/local/lib/libmhash.so /usr/lib64/libmhash.so
ln -sf /usr/local/lib/libmhash.so.2 /usr/lib64/libmhash.so.2
ln -sf /usr/local/lib/libmhash.so.2.0.1 /usr/lib64/libmhash.so.2.0.1
ldconfig 

cd .. 

http://downloads.sourceforge.net/project/mcrypt/MCrypt/2.6.8/mcrypt-2.6.8.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fmcrypt%2F&ts=1322460060&use_mirror=ncu

tar zxvf mcrypt-2.6.8.tar.gz
cd mcrypt-2.6.8/
/sbin/ldconfig
./configure
make;make install



cd ..
    http://www.ijg.org/files/jpegsrc.v8d.tar.gz

tar zxvf jpegsrc.v8d.tar.gz
cd jpeg-8d

./configure  --prefix=/usr/local/jpeg8/ --enable-shared --enable-static

make;make install



cd ..
http://prdownloads.sourceforge.net/libpng/libpng-1.5.12.tar.gz?download    

tar zxvf libpng-1.5.12.tar.gz
cd libpng-1.5.12
./configure  --prefix=/usr/local/libpng --enable-shared --enable-static
make;make install


freetype

cd ..

http://downloads.sourceforge.net/project/freetype/freetype2/2.4.10/freetype-2.4.10.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Ffreetype%2Ffiles%2Ffreetype2%2F2.4.10%2F&ts=1359511855&use_mirror=nchc
tar zxvf freetype-2.4.10.tar.gz

cd freetype-2.4.10
./configure  --prefix=/usr/local/freetype
make;make install




cd ..
https://github.com/downloads/libevent/libevent/libevent-2.0.19-stable.tar.gz   
tar zxvf libevent-2.0.19-stable.tar.gz
cd libevent-2.0.19-stable
./configure --prefix=/usr/local/libevent

make;make install



ln -s /usr/lib64/libc-client.so /usr/lib/libc-client.so         
ln -s /usr/lib64/libkrb5.so /usr/lib/libkrb5.so

cd ..

------------------------------------------------------------------

安装 PHP 






./configure --prefix=/server/php --with-config-file-path=/server/php/etc --with-mysql=/server/mysql --with-mysqli=/server/mysql/bin/mysql_config --enable-fpm --with-iconv-dir=/usr/local --with-pcre-dir=/usr/bin/pcre-config --with-mhash   --with-pdo-mysql=/server/mysql --enable-soap --with-gd --with-curl  --enable-gd-native-ttf --enable-dom --enable-simplexml --enable-mbstring --with-mcrypt --enable-sockets --enable-discard-path --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-freetype-dir=/usr/local/freetype --with-iconv=/usr/local  --with-png-dir=/usr/local/libpng --with-jpeg-dir=/usr/local/jpeg8/  --enable-mbregex --enable-fastcgi --enable-ftp --enable-exif --disable-ipv6  --enable-zip --with-openssl  --with-zlib --disable-cli  --enable-force-cgi-redirect --with-bz2 --with-imap --with-imap-ssl --with-kerberos   




 

vi Makefile 大约77 行左右的地方: EXTRA_LIBS = ..... -lcrypt 在最后加上 -liconv，例如: EXTRA_LIBS = ..... -lcrypt -liconv 然后重新再次 make 即可。
make
make install


查看  vi /server/apache/conf/httpd.conf



<IfModule dir_module>
    DirectoryIndex index.html index.php default.htm default.html default.php index.htm
</IfModule>

<IfModule mime_module>

AddType application/x-httpd-php .php


</IfModule>

<IfModule fastcgi_module>
    ScriptAlias /fcgi-bin/ /server/php/sbin/
    FastCGIExternalServer /server/php/sbin/php-fpm -host 127.0.0.1:9000 -idle-timeout 900
    AddHandler php-fastcgi .php
    Action php-fastcgi /fcgi-bin/php-fpm

</IfModule> 

<Directory "/server/php/sbin/">
Options none
Order allow,deny
Allow from all
</Directory> 




rm -rf /etc/php.ini
cp php.ini-recommended /server/php/etc/php.ini

ln -s  /server/php/etc/php.ini  /etc/php.ini


vi /server/php/etc/php-fpm.conf 

取消 nobody注释

/server/php/sbin/php-fpm start


netstat -ntlp


/server/php/sbin/php-fpm stop



cp /server/php/sbin/php-fpm /etc/init.d/php-fpm


chmod 755 /etc/rc.d/init.d/php-fpm

vi /etc/rc.d/init.d/php-fpm

# chkconfig: 2345 40 60
# description: php-fpm

chkconfig --add php-fpm
chkconfig php-fpm on



--------------------------------------------

安装APC

cd ..
http://pecl.php.net/get/APC-3.1.11.tgz          http://pecl.php.net/get/APC-3.1.14.tgz     http://pecl.php.net/get/APC-3.1.9.tgz
tar zxvf APC-3.1.11.tgz
cd  APC-3.1.11

/server/php/bin/phpize

./configure --enable-apc --enable-apc-mmap --with-php-config=/server/php/bin/php-config
 
make;make install


vi /server/php/etc/php.ini

查找extension_dir = /server/php/lib/php/extensions/no-debug-non-zts-20060613/  
                  

下面添加 extension = "apc.so"

配置php.ini 末尾加入

[apc]
apc.enabled = 1
apc.shm_size = 512M
apc.ttl = 86400
apc.user_ttl = 86400
apc.num_files_hint = 10000
apc.user_entries_hint = 10000
apc.max_file_size = 5M
apc.stat = 0  (0是不更新PHP文件）



cp apc.php /server/apache/htdocs

cd ..
------------------------------------

安装 webmin



http://www.webmin.com/download.html

wget http://prdownloads.sourceforge.net/webadmin/webmin-1.610.tar.gz   

tar zxvf webmin-1.610.tar.gz

cd webmin-1.610


./setup.sh 

vi /etc/sysconfig/iptables


iptables -A INPUT -p tcp --dport 14334 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

/etc/init.d/iptables restart



-----------------------------------------------

配置 webmin  

yum  -y install sendmail  sendmail-cf  m4

并启动 sendmail


配置 apache 服务器
配置 mysql 服务器

删除mysql匿名用户

---------------------------------------------------

查看系统限制

ulimit -n


增加 

ulimit -SHn 65535



vi  /etc/security/limits.conf


*	soft	nofile	65535
*	hard	nofile	65535


vi /etc/sysctl.conf 

fs.file-max = 1966050

--------------------------------------

apache 设置 
http://www.phpchina.com/resource/manual/apache/mod/worker.html

http://hi.baidu.com/ostech/item/75844640feefb39e823ae184

http://www.5iphp.com/apache-MPM-prefork-worker
http://wenku.baidu.com/view/962ffb1910a6f524ccbf85c2.html

Server--->httpd 子进程
Threads --->进程的线程



    ServerLimit		500        默认的最大httpd子进程总数是16, 为了加大子进程数量，需要一开始声明最大的子进程数量。
    ThreadLimit		64         每个子进程的线程默认的最大数量是 64，需要一开始声明最大的线程数量。
    StartServers          10         一开始启动多少个进程。
    ThreadsPerChild      20         固定下来每个进程有多少个线程。进程开2，就有2 x ThreadsPerChild 个线程被激活。
    MinSpareThreads      75         默认是75    
    MaxSpareThreads      250        默认是250    
    MaxClients          10000
    MaxRequestsPerChild 10000


ServerLimit  x  ThreadsPerChild   >=   MaxClients

MaxClients /  ThreadsPerChild  = 整数

MaxSpareThreads  > =  MinSpareThreads  +  ThreadsPerChild

--------------------------


优化 mysql  




http://www.zysafe.com/html/project/01/2012082716601.html


http://www.kkvkk.com/178/


back_log = 
要求MySQL能有的连接数量。当主要MySQL线程在一个很短时间内得到非常多的连接请求，这就起作用，然后主线程花些时间(尽管很短)检查连接并且启 动一个新线程。back_log值指出在MySQL暂时停止回答新请求之前的短时间内多少个请求可以被存在堆栈中。只有如果期望在一个短时间内有很多连 接，你需要增加它，换句话说，这值对到来的TCP/IP连接的侦听队列的大小。你的操作系统在这个队列大小上有它自己的限制。试图设定back_log高于你的操作系统的限制将是无效的。默认数值是50


skip-networking
开启该选项可以彻底关闭MySQL的TCP/IP连接方式，如果WEB服务器是以远程连接的方式访问MySQL数据库服务器则不要开启该选项！否则将无法正常连接！


max_connections = 
指定MySQL允许的最大连接进程数。如果在访问论坛时经常出现Too Many Connections的错误提 示，则需要增大该参数值。 


table_open_cache

5.1.3版本之前叫做  table_cache  ， 指定表高速缓存的大小。每当MySQL访问一个表时，如果在表缓冲区中还有空间，该表就被打开并放入其中，这样可以更快地访问表内容。通过检查峰值时间的 状态值Open_tables和Opened_tables，可以决定是否需要增加table_cache的值。如果你发现open_tables等于 table_cache，并且opened_tables在不断增长，那么你就需要增加table_cache的值了（上述状态值可以使用show status like ‘Open_tables’获得）。注意，不能盲目地把table_cache设置成很大的值。如果设置得太高，可能会造成文件描述符不足，从而造成性能 不稳定或者连接失败。在 MySQL 默认安装情况下，table_open_cache 的值在 2G 内存以下的机器中的值默认时 256MB 到 512MB，如果机器有 4G 内存,则默认这个值是 2048MB，但这决意味着机器内存越大，这个值应该越大，因为 table_open_cache 加大后，使得 MySQL 对 SQL 响应的速度更快了，不可避免的会产生更多的死锁（dead lock），这样反而使得数据库整个一套操作慢了下来，严重影响性能。所以平时维护中还是要根据库的实际情况去作出判断，找到最适合你维护的库的 



max_allowed_packet

一个包的最大尺寸。消息缓冲区被初始化为net_buffer_length字节，但是可在需要时增加到max_allowed_packet个字节。缺 省地，该值太小必能捕捉大的(可能错误)包。如果你正在使用大的BLOB列，你必须增加该值。它应该象你想要使用的最大BLOB的那么大。mysql导入数据或者某些操作的数据包大于16M会报错，建议修改成比主要库的文件总和大。

binlog_cache_size

BIN后缀的 LOG文件的缓存。在一个事务中binlog为了记录SQL状态所持有的cache大小 
# 如果你经常使用大的,多声明的事务,你可以增加此值来获取更大的性能. 
# 所有从事务来的状态都将被缓冲在binlog缓冲中然后在提交后一次性写入到binlog中 
# 如果事务比此值大, 会使用磁盘上的临时文件来替代. 
# 此缓冲在每个连接的事务第一次更新状态时被创建 



max_heap_table_size

独立的内存表所允许的最大容量. 
# 此选项为了防止意外创建一个超大的内存表导致永尽所有的内存资源. 







------------------------

优化PHP 

http://blog.lizhigang.net/archives/30

















